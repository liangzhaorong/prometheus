# my global config
global:
  scrape_interval:     15s # 配置了 Prometheus 抓取 target 的时间间隔, 默认值 1min 抓取一次
  scrape_timeout:      10s # 抓取 target 的超时时间, 默认值为 10s
  evaluation_interval: 30s # 指定 Prometheus 计算一个 Rule 配置的时间间隔
  # scrape_timeout is set to the global default (10s).

  # 在外部系统进行传输时, 会将 external_labels 中指定的 Label 添加到时序上, 前提是
  # 时序上没有冲突 Label, 如果存在冲突的 Label, 则不会添加该配置中的 Label
  external_labels:
    monitor: codelab
    foo:     bar

# 指定 Rule 配置文件的路径
rule_files:
- "first.rules"
- "my/*.rules"

remote_write:
  - url: http://remote1/push # 写入远程存储的地址
    name: drop_expensive
    write_relabel_configs: # 在写入远程存储前, 会触发 Relabel 操作
    - source_labels: [__name__]
      regex:         expensive.*
      action:        drop
  - url: http://remote2/push
    name: rw_tls
    tls_config:
      cert_file: valid_cert_file
      key_file: valid_key_file

remote_read:
  - url: http://remote1/read
    read_recent: true
    name: default
  - url: http://remote3/read
    read_recent: false
    name: read_special
    required_matchers:
      job: special
    tls_config:
      cert_file: valid_cert_file
      key_file: valid_key_file

scrape_configs:
  # job 的名称, Prometheus 会将该名称作为 Label 追加到抓取的每条时序中
- job_name: prometheus

  # 决定 Prometheus 如何处理时序数据中出现的 Label 冲突
  # 为 true, 则会保留时序中原有 Label, 忽略 Prometheus Server 端追加的冲突 Label.
  # 为 false, 则在时序原有的 Label Name 前追加 "exported_" 标识, Prometheus Server 端追加的 Label 不变
  # 注: external_labels 配置项中定义的 Label 并不会受该配置的影响
  honor_labels: true
  # 这里的 scrape_internal 和 scrape_timeout 配置会覆盖 global 部分的同名配置, 且只对该 job 生效
  # scrape_interval is defined by the configured global (15s).
  # scrape_timeout is defined by the global default (10s).

  # metrics_path defaults to '/metrics'
  # scheme defaults to 'http'.

  # 基于文件的服务发现: 重新加载
  file_sd_configs:
    - files: # 下面的文件中配置了相关的 target 信息
      - foo/*.slow.json
      - foo/*.slow.yml
      - single/file.yml
      refresh_interval: 10m # Prometheus 每隔 10min 会重新加载上述配置文件, 更新其 target 信息
    - files:
      - bar/*.yaml

  # 用静态方式配置该 job 要抓取的地址, 每个地址对应一个 target
  static_configs:
  - targets: ['localhost:9090', 'localhost:9191']
    labels: # 上述 target 的公共 Label, 从上述 targets 抓取到的全部时序都会被追加到这些公共 Label
      my:   label
      your: label

  # 用于配置 Prometheus 的 Relabel 操作, 该操作的主要目的是修改 Label 信息
  relabel_configs:
    # source_labels 指定参与 Relabel 操作的 Label name, 如果指定多个 Label name, 以逗号分隔
  - source_labels: [job, __meta_dns_name]
    # 指定一个正则表达式, 只有符合该正则的 Label Name, 才能被该 Relabel 操作处理
    regex:         (.*)some-[regex]
    # 经过该 Relabel 操作处理的 Label Value 值会被写入 target_label 指定的 Label 中
    target_label:  job
    # 如果 Label Value 符合 regex 指定的正则, 则会被替换成 replacement 指定的格式
    # 其中 $1 即为原 Label Value
    replacement:   foo-${1}
    # action defaults to 'replace'
  - source_labels: [abc]
    target_label:  cde
  - replacement:   static
    target_label:  abc
  - regex:
    replacement:   static
    target_label:  abc

  bearer_token_file: valid_token_file


- job_name: service-x

  basic_auth:
    username: admin_name
    password: "multiline\nmysecret\ntest"

  scrape_interval: 50s
  scrape_timeout:  5s

  sample_limit: 1000

  # metrics_path 是抓取时序数据的 http path, 默认值为 "/metrics"
  metrics_path: /my_path
  # scheme: 抓取时序数据时使用的网络协议, 默认 http
  scheme: https

  dns_sd_configs:
  - refresh_interval: 15s
    names:
    - first.dns.address.domain.com
    - second.dns.address.domain.com
  - names:
    - first.dns.address.domain.com
    # refresh_interval defaults to 30s.

  relabel_configs:
  - source_labels: [job]
    regex:         (.*)some-[regex]
    action:        drop # 如果 Label Value 符合 RelabelConfig 指定的正则表达式, 则过滤掉该时序
  - source_labels: [__address__]
    modulus:       8
    target_label:  __tmp_hash
    action:        hashmod # 计算参与 Relabe 操作的 Label Value 的 hash 值并取模, 然后生成新的 Label 记录该计算结果
  - source_labels: [__tmp_hash]
    regex:         1
    action:        keep # 如果 Label Value 不符合 RelabelConfig 指定的正则表达式, 则过滤掉该时序
    # 匹配全部 Label Name, 符合指定正则表达式的 Label Name 会根据指定的模板生成新的 Label Name, 此过程中的 Label Value 不多
  - action:        labelmap
    regex:         1
  - action:        labeldrop # 如果 Label Name 符合指定的正则表达式, 则将该 Label 删除
    regex:         d
  - action:        labelkeep # 如果 Label Name 不符合指定的正则表达式, 则将该 Label 删除
    regex:         k

  metric_relabel_configs:
  - source_labels: [__name__]
    regex:         expensive_metric.*
    action:        drop

- job_name: service-y

  consul_sd_configs:
  - server: 'localhost:1234'
    token: mysecret
    services: ['nginx', 'cache', 'mysql']
    tags: ["canary", "v1"]
    node_meta:
      rack: "123"
    allow_stale: true
    scheme: https
    tls_config:
      ca_file: valid_ca_file
      cert_file: valid_cert_file
      key_file:  valid_key_file
      insecure_skip_verify: false

  relabel_configs:
  - source_labels: [__meta_sd_consul_tags]
    separator:     ','
    regex:         label:([^=]+)=([^,]+)
    target_label:  ${1}
    replacement:   ${2}

- job_name: service-z

  tls_config:
    cert_file: valid_cert_file
    key_file: valid_key_file

  bearer_token: mysecret

- job_name: service-kubernetes

  kubernetes_sd_configs:
  - role: endpoints
    api_server: 'https://localhost:1234'
    tls_config:
      cert_file: valid_cert_file
      key_file: valid_key_file

    basic_auth:
      username: 'myusername'
      password: 'mysecret'

- job_name: service-kubernetes-namespaces

  kubernetes_sd_configs:
  - role: endpoints
    api_server: 'https://localhost:1234'
    namespaces:
      names:
        - default

  basic_auth:
    username: 'myusername'
    password_file: valid_password_file


- job_name: service-marathon
  marathon_sd_configs:
  - servers:
    - 'https://marathon.example.com:443'

    auth_token: "mysecret"
    tls_config:
      cert_file: valid_cert_file
      key_file: valid_key_file

- job_name: service-ec2
  ec2_sd_configs:
    - region: us-east-1
      access_key: access
      secret_key: mysecret
      profile: profile
      filters:
        - name: tag:environment
          values:
            - prod

        - name: tag:service
          values:
            - web
            - db

- job_name: service-azure
  azure_sd_configs:
    - environment: AzurePublicCloud
      authentication_method: OAuth
      subscription_id: 11AAAA11-A11A-111A-A111-1111A1111A11
      tenant_id: BBBB222B-B2B2-2B22-B222-2BB2222BB2B2
      client_id: 333333CC-3C33-3333-CCC3-33C3CCCCC33C
      client_secret: mysecret
      port: 9100

- job_name: service-nerve
  nerve_sd_configs:
    - servers:
      - localhost
      paths:
      - /monitoring

- job_name: 0123service-xxx
  metrics_path: /metrics
  static_configs:
    - targets:
      - localhost:9090

- job_name: badfederation
  honor_timestamps: false
  metrics_path: /federate
  static_configs:
    - targets:
      - localhost:9090

- job_name: 測試
  metrics_path: /metrics
  static_configs:
    - targets:
      - localhost:9090

- job_name: service-triton
  triton_sd_configs:
  - account: 'testAccount'
    dns_suffix: 'triton.example.com'
    endpoint: 'triton.example.com'
    port: 9163
    refresh_interval: 1m
    version: 1
    tls_config:
      cert_file: valid_cert_file
      key_file: valid_key_file

- job_name: service-openstack
  openstack_sd_configs:
  - role: instance
    region: RegionOne
    port: 80
    refresh_interval: 1m
    tls_config:
      ca_file: valid_ca_file
      cert_file: valid_cert_file
      key_file:  valid_key_file

alerting:
  alertmanagers: # 配置 AlerManager 的相关信息
  - scheme: https # Prometheus Server 向 AlertManager 发送请求时使用的 scheme
    static_configs: # 静态配置 AlertManager 的地址, 与静态配置 target 地址的方法类似
    - targets:
      - "1.2.3.4:9093"
      - "1.2.3.5:9093"
      - "1.2.3.6:9093"
